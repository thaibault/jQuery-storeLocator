{
  "_args": [
    [
      {
        "raw": "git+ssh://git@github.com/thaibault/webOptimizer.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "git+ssh://git@github.com/thaibault/webOptimizer.git",
        "spec": "git+ssh://git@github.com/thaibault/webOptimizer.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:thaibault/webOptimizer.git",
          "sshUrl": "git+ssh://git@github.com/thaibault/webOptimizer.git",
          "httpsUrl": "git+https://github.com/thaibault/webOptimizer.git",
          "gitUrl": "git://github.com/thaibault/webOptimizer.git",
          "shortcut": "github:thaibault/webOptimizer",
          "directUrl": "https://raw.githubusercontent.com/thaibault/webOptimizer/master/package.json"
        }
      },
      "/home/torben/cloud/data/repository/jQuery-storeLocator"
    ]
  ],
  "_from": "git+ssh://git@github.com/thaibault/webOptimizer.git",
  "_id": "webOptimizer@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/webOptimizer",
  "_phantomChildren": {
    "big.js": "3.1.3",
    "object-assign": "4.1.0"
  },
  "_requested": {
    "raw": "git+ssh://git@github.com/thaibault/webOptimizer.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "git+ssh://git@github.com/thaibault/webOptimizer.git",
    "spec": "git+ssh://git@github.com/thaibault/webOptimizer.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:thaibault/webOptimizer.git",
      "sshUrl": "git+ssh://git@github.com/thaibault/webOptimizer.git",
      "httpsUrl": "git+https://github.com/thaibault/webOptimizer.git",
      "gitUrl": "git://github.com/thaibault/webOptimizer.git",
      "shortcut": "github:thaibault/webOptimizer",
      "directUrl": "https://raw.githubusercontent.com/thaibault/webOptimizer/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/jQuery-tools"
  ],
  "_resolved": "git+ssh://git@github.com/thaibault/webOptimizer.git#a220c29018ce2463ce754f53e2c1a7cdd55c75b6",
  "_shasum": "6b62255414d7487e479c53aa2719f8197d363219",
  "_shrinkwrap": null,
  "_spec": "git+ssh://git@github.com/thaibault/webOptimizer.git",
  "_where": "/home/torben/cloud/data/repository/jQuery-storeLocator",
  "bin": {
    "webOptimizer": "taskRunner.compiled.js"
  },
  "bugs": {
    "url": "https://github.com/thaibault/webOptimizer/issues"
  },
  "configuration": {
    "default": {
      "debug": false,
      "library": true,
      "exportFormat": "umd",
      "favicon": {
        "logo": {
          "__evaluate__": "path.join(self.path.asset.source, self.path.asset.favicon)"
        },
        "prefix": {
          "__evaluate__": "path.join(self.path.asset.image, 'favicons-[hash]/')"
        },
        "emitStats": false,
        "statsFilename": "iconStats.json",
        "persistentCache": true,
        "inject": true,
        "background": "white",
        "title": {
          "__evaluate__": "self.name"
        },
        "icons": {
          "android": true,
          "appleIcon": true,
          "appleStartup": true,
          "coast": true,
          "favicons": true,
          "firefox": true,
          "opengraph": true,
          "twitter": true,
          "yandex": true,
          "windows": true
        }
      },
      "files": {
        "cascadingStyleSheet": {
          "__evaluate__": "self.debug ? null : `${self.path.asset.cascadingStyleSheet}index.css?${self.hashAlgorithm}=[contenthash]`"
        },
        "html": [
          {
            "chunksSortMode": "auto",
            "debug": false,
            "filename": "index.html",
            "hash": true,
            "inject": "body",
            "minify": {
              "__evaluate__": "self.module.optimizer.htmlMinifier"
            },
            "template": {
              "__evaluate__": "`html?${JSON.stringify(helper.extendObject({}, self.module.html, {minimize: false}))}!pug?${JSON.stringify(self.module.preprocessor.pug)}!${self.path.source}index.pug`"
            }
          }
        ],
        "javaScript": {
          "__evaluate__": "`${self.path.asset.javaScript}${2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'buildDLL' ? '[name]' : 'index'}.js?${self.hashAlgorithm}=[hash]`"
        }
      },
      "injection": {
        "external": "__implicit__",
        "internal": [],
        "commonChunkIDs": [
          "vendor"
        ],
        "dllChunkIDs": [
          "vendor",
          "developmentHelper"
        ]
      },
      "inPlace": {
        "cascadingStyleSheet": true,
        "externalLibrary": true,
        "javaScript": false,
        "otherMaximumFileSizeLimitInByte": 40960
      },
      "knownExtensions": [
        ".compiled",
        "",
        ".compiled.js",
        ".js",
        ".coffee",
        ".coffee.md",
        ".litcoffee",
        ".compiled.html",
        ".html",
        ".pug",
        ".compiled.css",
        ".css",
        ".scss",
        ".sass",
        ".less",
        ".compiled.eot",
        ".eot",
        ".compiled.woff",
        ".woff",
        ".compiled.woff2",
        ".woff2",
        ".compiled.ttf",
        ".ttf",
        ".compiled.svg",
        ".svg",
        ".compiled.png",
        ".png",
        ".compiled.jpg",
        ".jpg",
        ".compiled.ico",
        ".ico",
        ".compiled.gif",
        ".gif"
      ],
      "module": {
        "aliases": {
          "webOptimizer/browserAPI$": "webOptimizer/browserAPI.compiled"
        },
        "cascadingStyleSheet": {},
        "html": {
          "config": "html",
          "attrs": [
            "img:src",
            "link:href",
            "a:href"
          ]
        },
        "skipParseRegularExpression": [],
        "optimizer": {
          "data": {
            "limit": {
              "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
            },
            "name": {
              "__evaluate__": "`/${self.path.asset.data}[name].[ext]?${self.hashAlgorithm}=[hash]`"
            }
          },
          "font": {
            "eot": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "name": {
                "__evaluate__": "`/${self.path.asset.font}[name].[ext]?${self.hashAlgorithm}=[hash]`"
              }
            },
            "svg": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "mimetype": "image/svg+xml",
              "name": {
                "__evaluate__": "`/${self.path.asset.font}[name].[ext]?${self.hashAlgorithm}=[hash]`"
              }
            },
            "ttf": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "mimetype": "application/octet-stream",
              "name": {
                "__evaluate__": "`/${self.path.asset.font}[name].[ext]?${self.hashAlgorithm}=[hash]`"
              }
            },
            "woff": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "name": {
                "__evaluate__": "`/${self.path.asset.font}[name].[ext]?${self.hashAlgorithm}=[hash]`"
              }
            }
          },
          "htmlMinifier": {
            "caseSensitive": true,
            "collapseBooleanAttributes": true,
            "collapseInlineTagWhitespace": true,
            "collapseWhitespace": true,
            "conservativeCollapse": true,
            "ignoreCustomComments": [
              {
                "__evaluate__": "/^\\|?[a-z]{2}[A-Z]{2}:/"
              },
              {
                "__evaluate__": "/^[a-z]{2}[A-Z]{2}$/"
              }
            ],
            "ignoreCustomFragments": [
              {
                "__evaluate__": "/<%[\\s\\S]*?%>/"
              },
              {
                "__evaluate__": "/<\\?[\\s\\S]*?\\?>/"
              },
              {
                "__evaluate__": "/<link[^>]*>/"
              },
              {
                "__evaluate__": "/<img[^>]*>/"
              }
            ],
            "includeAutoGeneratedTags": false,
            "removeAttributeQuotes": false,
            "removeComments": true,
            "removeCommentsFromCDATA": true,
            "removeCDATASectionsFromCDATA": true,
            "removeTagWhitespace": false,
            "removeRedundantAttributes": false,
            "removeEmptyAttributes": false,
            "removeScriptTypeAttributes": true,
            "removeStyleLinkTypeAttributes": true,
            "removeOptionalTags": false,
            "removeEmptyElements": false,
            "useShortDoctype": false,
            "lint": false,
            "keepClosingSlash": true,
            "maxLineLength": 1e+31,
            "minifyJS": {
              "__evaluate__": "self.module.optimizer.uglifyJS"
            },
            "minifyCSS": false,
            "minifyURLs": false,
            "preserveLineBreaks": true,
            "preventAttributesEscaping": true,
            "processScripts": [],
            "processConditionalComments": false,
            "quoteCharacter": "\""
          },
          "image": {
            "content": {
              "disable": {
                "__evaluate__": "self.debug"
              },
              "optipng": {
                "optimizationLevel": 7
              },
              "gifsicle": {
                "optimizationLevel": 3,
                "interlanced": false,
                "colors": 256
              },
              "jpegtran": {
                "progressive": true,
                "arithmetic": true
              },
              "svgo": {},
              "pngquant": null,
              "plugins": []
            },
            "file": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "name": {
                "__evaluate__": "`/${self.path.asset.image}[name].[ext]?${self.hashAlgorithm}=[hash]`"
              }
            }
          },
          "uglifyJS": {
            "compress": {
              "warnings": false
            }
          }
        },
        "preprocessor": {
          "pug": {
            "moduleAliases": {
              "__evaluate__": "self.module.aliases"
            },
            "knownExtensions": {
              "__evaluate__": "self.knownExtensions"
            },
            "context": {
              "__evaluate__": "self.path.context"
            },
            "compiler": {
              "pretty": false,
              "debug": false,
              "cache": true
            },
            "locals": {
              "includeManifest": {
                "__evaluate__": "!!self.offline"
              }
            }
          },
          "less": {},
          "modernJavaScript": {
            "cacheDirectory": true,
            "compact": true,
            "presets": [
              "es2015-loose",
              "stage-0"
            ],
            "plugins": [
              "transform-flow-strip-types"
            ]
          },
          "sass": {
            "indentedSyntax": true
          },
          "scss": {}
        },
        "style": {
          "insertAt": "top",
          "singleton": true
        }
      },
      "offline": {
        "caches": {
          "main": [
            "index.html",
            "manifest.html",
            ":rest:"
          ]
        },
        "excludes": [
          {
            "__evaluate__": "`*.map?${self.hashAlgorithm}=*`"
          }
        ],
        "externals": [
          "//",
          "manifest.html"
        ],
        "publicPath": "",
        "relativePaths": false,
        "rewrites": {
          "index.html": "//"
        },
        "updateStrategy": "changed",
        "version": "[hash]",
        "AppCache": {
          "directory": ""
        },
        "ServiceWorker": {
          "output": {
            "__evaluate__": "path.join(self.path.asset.javaScript, 'serviceWorker.js')"
          }
        }
      },
      "path": {
        "apiDocumentation": "apiDocumentation/",
        "asset": {
          "cascadingStyleSheet": "cascadingStyleSheet/",
          "coffeeScript": "coffeeScript/",
          "data": "data/",
          "favicon": {
            "__evaluate__": "`${self.path.asset.image}favicon.png`"
          },
          "font": "font/",
          "image": "image/",
          "javaScript": "javaScript/",
          "less": "less/",
          "publicTarget": "",
          "sass": "sass/",
          "scss": "scss/",
          "source": {
            "__evaluate__": "self.path.source"
          },
          "target": {
            "__evaluate__": "self.path.target"
          },
          "template": "template/"
        },
        "ignore": [
          "node_modules",
          ".git",
          {
            "__evaluate__": "self.path.apiDocumentation"
          }
        ],
        "manifest": "manifest.appcache",
        "source": "source/",
        "target": "build/",
        "tidyUp": [
          {
            "__evaluate__": "path.join(self.path.target, self.path.asset.javaScript, '.__dummy__.compiled.js')"
          },
          {
            "__evaluate__": "path.join(self.path.target, self.path.asset.javaScript, '.__dummy__.compiled.js.map')"
          }
        ]
      },
      "target": "web",
      "assetPattern": {
        "javaScript": {
          "excludeFilePathRegularExpression": {
            "__evaluate__": "`^(?:.*/)?(?:developmentHelper|vendor${self.debug ? '|index': ''})(?:\\.compiled)?\\.js$`"
          },
          "pattern": "'use strict';\n{1}"
        }
      },
      "build": {
        "default": {
          "outputExtension": "js",
          "preinstall": {
            "__evaluate__": "`touch '${self.path.target}\\${self.path.asset[buildConfiguration.type]}\\${path.basename(filePath, \\`.\\${buildConfiguration.extension}\\`)}.compiled.\\${buildConfiguration.outputExtension}'`"
          },
          "fileNamePattern": "^.+\\.compiled(?:\\.[^.]+(?:\\.map)?)?$"
        },
        "javaScript": {
          "extension": "js"
        },
        "coffeeScript": {
          "extension": "coffee"
        },
        "cascadingStyleSheet": {
          "extension": "css",
          "outputExtension": "css"
        },
        "less": {
          "outputExtension": "css"
        },
        "sass": {
          "outputExtension": "css"
        },
        "scss": {
          "outputExtension": "css"
        }
      },
      "buildDefinition": {
        "TARGET": {
          "__evaluate__": "`'${self.target}'`"
        }
      },
      "commandLine": {
        "build": {
          "command": "webpack",
          "arguments": [
            "--config",
            {
              "__evaluate__": "`${webOptimizerPath}/webpackConfigurator.compiled.js`"
            },
            "--progress",
            "--display-chunks",
            "--display-reasons",
            "--display-error-details"
          ]
        },
        "document": {
          "command": "jsdoc",
          "arguments": [
            "--package",
            "./package.json",
            "--readme",
            "./readme.md",
            "--destination",
            {
              "__evaluate__": "self.path.apiDocumentation"
            },
            {
              "__evaluate__": "`'${path.join(self.path.target, self.path.asset.javaScript)}'*.js`"
            }
          ]
        },
        "lint": {
          "command": "eslint",
          "arguments": [
            "--config",
            {
              "__evaluate__": "`'${webOptimizerPath}/package.json'`"
            },
            "--ignore-pattern",
            {
              "__evaluate__": "`'${self.path.target.substring(currentPath.length + 1) ? `${self.path.target.substring(currentPath.length + 1)}**` : \"*.compiled.js\"}'`"
            },
            "--ignore-pattern",
            {
              "__evaluate__": "`'${self.path.apiDocumentation}'`"
            },
            "'**/*.js'"
          ]
        },
        "serve": {
          "command": "webpack-dev-server",
          "arguments": [
            "--config",
            {
              "__evaluate__": "`'${webOptimizerPath}/webpackConfigurator.compiled.js'`"
            },
            "--hot",
            "--host",
            "0.0.0.0",
            "--port",
            {
              "__evaluate__": "self.development.server.port"
            },
            "--colors",
            "--compress",
            "--history-api-fallback"
          ]
        },
        "test": {
          "command": "./testBundle.compiled.js"
        },
        "testInBrowser": {
          "__evaluate__": "self.commandLine.serve"
        },
        "typeCheck": {
          "command": "flow",
          "arguments": [
            "--color",
            "always",
            "--strip-root"
          ]
        }
      },
      "development": {
        "openBrowser": null,
        "server": {
          "contentBase": {
            "__evaluate__": "self.path.source"
          },
          "historyApiFallback": true,
          "stats": {
            "colors": true
          },
          "host": "localhost",
          "port": 8080,
          "protocol": "http"
        },
        "tool": null
      },
      "hashAlgorithm": "md5",
      "loader": {
        "alias": {
          "pug": "webOptimizer/pug"
        },
        "extensions": [
          "",
          ".webpack-loader.js",
          ".web-loader.js",
          ".loader.js",
          "-loader.compiled.js",
          "-loader.js",
          "Loader.compiled.js",
          "Loader.js",
          ".js"
        ],
        "modulesDirectories": [
          "web_loaders",
          "web_modules",
          "node_loaders",
          "node_modules",
          "../"
        ]
      },
      "document": {
        "inPlace": {
          "externalLibrary": false
        },
        "module": {
          "optimizer": {
            "uglifyJS": null
          },
          "preprocessor": {
            "modernJavaScript": {
              "presets": [
                "es2015-node",
                "stage-0"
              ]
            }
          }
        }
      },
      "test": {
        "exportFormat": "commonjs2",
        "files": {
          "javaScript": {
            "__evaluate__": "`${path.join(self.path.asset.target, self.path.asset.javaScript)}testBundle.compiled.js?${self.hashAlgorithm}=[hash]`"
          }
        },
        "injection": {
          "internal": "test/"
        },
        "target": "node",
        "assetPattern": {
          "javaScript": {
            "pattern": "#!/usr/bin/env node\n// -*- coding: utf-8 -*-\n'use strict'\n{1}"
          }
        }
      },
      "testInBrowser": {
        "files": {
          "html": [
            {
              "template": {
                "__evaluate__": "`html?${JSON.stringify(self.module.html)}!pug?${JSON.stringify(self.module.preprocessor.pug)}!${webOptimizerPath}/test.pug`"
              },
              "filename": "test.html"
            }
          ]
        },
        "inPlace": {
          "externalLibrary": true
        },
        "injection": {
          "internal": {
            "index": "test/"
          }
        },
        "module": {
          "optimizer": {
            "uglifyJS": null
          }
        },
        "offline": null
      }
    },
    "debug": {
      "debug": true,
      "injection": {
        "internal": {
          "developmentHelper": {
            "__evaluate__": "self.contextType === 'main' && 2 < self.givenCommandLineArguments.length ? (['buildDLL', 'serve', 'testInBrowser', 'watchDLL'].includes(self.givenCommandLineArguments[2]) ? [`webpack-dev-server/client?${self.development.server.protocol}://0.0.0.0:${self.development.server.port}`] : []).concat(!['buildDLL', 'watchDLL'].includes(self.givenCommandLineArguments[2]) ? 'webpack/hot/dev-server' : []) : []"
          }
        }
      },
      "files": {
        "html": [
          {
            "debug": true
          }
        ],
        "javaScript": {
          "__evaluate__": "`${self.path.asset.javaScript}[name].js?${self.hashAlgorithm}=[hash]`"
        }
      },
      "inPlace": {
        "cascadingStyleSheet": false,
        "javaScript": false,
        "otherMaximumFileSizeLimitInByte": 1
      },
      "module": {
        "preprocessor": {
          "pug": {
            "compiler": {
              "pretty": true
            },
            "locals": {
              "includeManifest": false
            }
          },
          "less": {
            "sourceMap": true
          }
        },
        "cascadingStyleSheet": {
          "sourceMap": true
        },
        "optimizer": {
          "uglifyJS": null,
          "htmlMinifier": {
            "collapseWhitespace": false,
            "removeComments": false,
            "removeCommentsFromCDATA": false,
            "removeCDATASectionsFromCDATA": false,
            "collapseInlineTagWhitespace": false,
            "collapseBooleanAttributes": false,
            "removeScriptTypeAttributes": false,
            "removeStyleLinkTypeAttributes": false
          }
        }
      },
      "offline": null,
      "development": {
        "openBrowser": {
          "url": {
            "__evaluate__": "((sourceFilePath) => `${self.development.server.protocol}://${self.development.server.host}:${self.development.server.port}/${path.basename(sourceFilePath.substring(sourceFilePath.lastIndexOf('!') + 1)).replace(/\\.[^.]+$/, '.html')}`)(self.files.html[0].template)"
          }
        },
        "tool": "#eval-cheap-module-source-map"
      },
      "library": {
        "injection": {
          "internal": {
            "vendor": {
              "__evaluate__": "2 < self.givenCommandLineArguments.length && ['buildDLL', 'testInBrowser', 'watchDLL'].includes(self.givenCommandLineArguments[2]) ? ['jquery', 'qunitjs', 'webOptimizer/browserAPI'] : []"
            }
          }
        }
      },
      "testInBrowser": {
        "development": {
          "openBrowser": {
            "url": {
              "__evaluate__": "((sourceFilePath) => `${self.development.server.protocol}://${self.development.server.host}:${self.development.server.port}/${path.basename(sourceFilePath.substring(sourceFilePath.lastIndexOf('!') + 1)).replace(/\\.[^.]+$/, '.html')}?notrycatch&noglobals`)(self.files.html[0].template)"
            }
          }
        },
        "injection": {
          "internal": {
            "vendor": [
              "jquery",
              "qunitjs",
              "webOptimizer/browserAPI"
            ],
            "index": {
              "__evaluate__": "['test/'].concat(self.debug && self.dllManifestFilePaths.length ? [`webpack-dev-server/client?${self.development.server.protocol}://0.0.0.0:${self.development.server.port}`, 'webpack/hot/dev-server'] : [])"
            }
          }
        }
      }
    },
    "library": {
      "files": {
        "cascadingStyleSheet": {
          "__evaluate__": "self.debug ? null : `${self.path.asset.cascadingStyleSheet}index.compiled.css?${self.hashAlgorithm}=[contenthash]`"
        },
        "javaScript": {
          "__evaluate__": "`${self.path.asset.javaScript}[name].compiled.js?${self.hashAlgorithm}=[hash]`"
        }
      },
      "injection": {
        "internal": {
          "index": "__auto__"
        }
      },
      "inPlace": {
        "cascadingStyleSheet": false,
        "javaScript": false,
        "otherMaximumFileSizeLimitInByte": 1,
        "externalLibrary": {
          "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'buildDLL'"
        }
      },
      "path": {
        "source": "./",
        "target": "./",
        "asset": {
          "cascadingStyleSheet": "./",
          "javaScript": "./",
          "coffeeScript": "./",
          "less": "./",
          "scss": "./",
          "sass": "./",
          "font": "./",
          "image": "./",
          "template": "./",
          "data": "./"
        }
      },
      "offline": null,
      "document": {
        "commandLine": {
          "document": {
            "arguments": [
              "--package",
              "./package.json",
              "--readme",
              "./readme.md",
              "--destination",
              {
                "__evaluate__": "self.path.apiDocumentation"
              },
              {
                "__evaluate__": "`'${path.join(self.path.target, self.path.asset.javaScript)}'*.compiled.js`"
              }
            ]
          }
        },
        "exportFormat": "var",
        "target": "node"
      },
      "test": {
        "injection": {
          "internal": "test"
        }
      },
      "testInBrowser": {
        "injection": {
          "internal": {
            "index": {
              "__evaluate__": "['test'].concat(self.debug && self.dllManifestFilePaths.length ? [`webpack-dev-server/client?${self.development.server.protocol}://0.0.0.0:${self.development.server.port}`, 'webpack/hot/dev-server'] : [])"
            }
          }
        }
      }
    }
  },
  "dependencies": {
    "add-asset-html-webpack-plugin": ">=0.2.0",
    "autoprefixer": ">=6.3.7",
    "babel-cli": ">=6.9.0",
    "babel-eslint": ">=6.1.2",
    "babel-loader": ">=6.2.4",
    "babel-plugin-transform-flow-strip-types": ">=6.8.0",
    "babel-polyfill": ">=6.9.1",
    "babel-preset-es2015": ">=6.9.0",
    "babel-preset-es2015-loose": ">=7.0.0",
    "babel-preset-es2015-node": ">=6.0.1",
    "babel-preset-stage-0": ">=6.5.0",
    "coffee-loader": "*",
    "coffee-script": "*",
    "css-loader": ">=0.23.1",
    "eslint": ">=3.0.1",
    "eslint-config-google": ">=0.5.0",
    "eslint-plugin-flowtype": ">=2.3.1",
    "eslint-plugin-jsdoc": ">=2.3.1",
    "extract-loader": ">=0.0.2",
    "extract-text-webpack-plugin": ">=1.0.1",
    "favicons-webpack-plugin": ">=0.0.6",
    "file-loader": ">=0.8.5",
    "flow-bin": ">=0.28.0",
    "html-loader": ">=0.4.3",
    "html-webpack-plugin": ">=2.22.0",
    "imagemin-webpack-plugin": ">=1.0.8",
    "imports-loader": ">=0.6.5",
    "jsdoc": ">=3.4.0",
    "jsdom": ">=9.4.1",
    "less": "*",
    "less-loader": "*",
    "loader-utils": ">=0.2.15",
    "node-sass": "*",
    "offline-plugin": ">=3.4.2",
    "open-browser-webpack-plugin": ">=0.0.2",
    "postcss-import": ">=8.1.2",
    "postcss-loader": ">=0.9.1",
    "pug": ">=2.0.0-alpha8",
    "rimraf": ">=2.5.3",
    "sass-loader": "*",
    "style-loader": ">=0.13.1",
    "url-loader": ">=0.5.7",
    "webpack": ">=1.13.1",
    "webpack-dev-server": ">=1.14.1",
    "webpack-load-plugins": ">=0.1.2",
    "webpack-sources": ">=0.1.0"
  },
  "description": "A generic web optimizer, (module) bundler and development environment.",
  "devDependencies": {
    "qunit-cli": ">=0.2.0",
    "source-map-support": ">=0.4.2"
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "node": true
    },
    "extends": "google",
    "parserOptions": {
      "ecmaFeatures": {},
      "ecmaVersion": 7,
      "impliedStrict": true,
      "sourceType": "module"
    },
    "parser": "babel-eslint",
    "plugins": [
      "jsdoc",
      "flowtype"
    ],
    "rules": {
      "arrow-parens": [
        "error",
        "always"
      ],
      "block-scoped-var": 0,
      "curly": [
        "error",
        "multi"
      ],
      "indent": [
        "error",
        4
      ],
      "max-nested-callbacks": [
        "error",
        10
      ],
      "no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "new-cap": 0,
      "no-constant-condition": 0,
      "no-new-func": 0,
      "no-new-wrappers": 0,
      "quote-props": [
        "error",
        "as-needed",
        {
          "numbers": true
        }
      ],
      "require-jsdoc": [
        "error",
        {
          "require": {
            "FunctionDeclaration": true,
            "MethodDefinition": true,
            "ClassDeclaration": true
          }
        }
      ],
      "semi": [
        "error",
        "never"
      ],
      "spaced-comment": [
        "error",
        "always",
        {
          "line": {
            "exceptions": [
              "/usr/bin/env node"
            ]
          }
        }
      ],
      "space-infix-ops": 0,
      "valid-jsdoc": [
        0,
        {
          "prefer": {
            "return": "returns"
          },
          "requireParamDescription": false,
          "requireReturnDescription": true,
          "requireReturnType": false
        }
      ],
      "jsdoc/check-param-names": "error",
      "jsdoc/check-tag-names": "error",
      "jsdoc/newline-after-description": [
        "error",
        "newer"
      ],
      "jsdoc/require-description-complete-sentence": "error",
      "jsdoc/require-hyphen-before-param-description": "error",
      "jsdoc/require-param": "error",
      "jsdoc/require-param-description": "error",
      "jsdoc/require-param-type": 0,
      "jsdoc/require-returns-description": "error",
      "jsdoc/require-returns-type": 0,
      "flowtype/require-parameter-type": "error",
      "flowtype/require-return-type": [
        "error",
        "always",
        {
          "annotateUndefined": "always"
        }
      ],
      "flowtype/space-before-type-colon": [
        "error",
        "never"
      ],
      "flowtype/space-after-type-colon": [
        "error",
        "never"
      ],
      "flowtype/type-id-match": [
        "error",
        "^([$_]*[A-Z]+[a-z0-9]*)+$"
      ]
    },
    "settings": {
      "flowtype": {
        "onlyFilesWithFlowAnnotation": false
      }
    }
  },
  "files": [
    "browserAPI.js",
    "configurator.js",
    "helper.js",
    "pugLoader.js",
    "taskRunner.js",
    "test.pug",
    "type.js",
    "webpackConfigurator.js"
  ],
  "gitHead": "a220c29018ce2463ce754f53e2c1a7cdd55c75b6",
  "homepage": "http://torben.website/webOptimizer",
  "keywords": [
    "webpack",
    "optimizer",
    "configuration",
    "generic",
    "lint",
    "bundle",
    "test",
    "document",
    "mock"
  ],
  "license": "CC-BY-3.0",
  "main": "webpackConfigurator.compiled.js",
  "name": "webOptimizer",
  "optionalDependencies": {},
  "readme": "# webOptimizer\nA generic web optimizer, (module) bundler and development environment.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thaibault/webOptimizer.git"
  },
  "scripts": {
    "build": "command='babel --plugins transform-flow-strip-types --presets es2015-node,stage-0 --source-maps inline --out-file' && $command helper.compiled.js helper.js && $command configurator.compiled.js configurator.js && $command taskRunner.compiled.js taskRunner.js && $command pugLoader.compiled.js pugLoader.js && $command webpackConfigurator.compiled.js webpackConfigurator.js && $command browserAPI.compiled.js browserAPI.js",
    "clear": "rm *.compiled.* &>/dev/null;rm test/*.compiled.* &>/dev/null;rm --recursive apiDocumentation &>/dev/null || true",
    "document": "npm run build && jsdoc --package ./package.json --readme ./readme.md --destination apiDocumentation *.compiled.js",
    "lint": "flow --color always --strip-root && eslint --ignore-pattern '*.compiled.*' '*.js' 'test/*.js' || true",
    "postinstall": "npm run build",
    "preinstall": "touch helper.compiled.js configurator.compiled.js taskRunner.compiled.js pugLoader.compiled.js webpackConfigurator.compiled.js",
    "test": "command='babel --plugins transform-flow-strip-types --presets es2015-node,stage-0 --source-maps inline --out-file' && $command browserAPI.compiled.js browserAPI.js && $command test/browserAPI.compiled.js test/browserAPI.js && chmod +x test/* && test/browserAPI.compiled.js && $command helper.compiled.js helper.js && $command configurator.compiled.js configurator.js && $command test/configurator.compiled.js test/configurator.js && chmod +x test/* && test/configurator.compiled.js && $command test/helper.compiled.js test/helper.js && chmod +x test/* && test/helper.compiled.js && $command pugLoader.compiled.js pugLoader.js && $command test/pugLoader.compiled.js test/pugLoader.js && chmod +x test/* && test/pugLoader.compiled.js && $command taskRunner.compiled.js taskRunner.js && $command test/taskRunner.compiled.js test/taskRunner.js && chmod +x test/* && test/taskRunner.compiled.js && $command webpackConfigurator.compiled.js webpackConfigurator.js && $command test/webpackConfigurator.compiled.js test/webpackConfigurator.js && chmod +x test/* && test/webpackConfigurator.compiled.js || true"
  },
  "version": "1.0.0"
}
